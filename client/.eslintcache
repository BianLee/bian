[{"/home/bian/Desktop/CS/Web/bian/client/src/index.js":"1","/home/bian/Desktop/CS/Web/bian/client/src/App.js":"2","/home/bian/Desktop/CS/Web/bian/client/src/components/index.js":"3","/home/bian/Desktop/CS/Web/bian/client/src/components/home/main.js":"4","/home/bian/Desktop/CS/Web/bian/client/src/components/nav/nav.js":"5","/home/bian/Desktop/CS/Web/bian/client/src/serviceWorker.js":"6"},{"size":297,"mtime":1613271797083,"results":"7","hashOfConfig":"8"},{"size":389,"mtime":1613924330365,"results":"9","hashOfConfig":"8"},{"size":106,"mtime":1611091168644,"results":"10","hashOfConfig":"8"},{"size":15643,"mtime":1613894980644,"results":"11","hashOfConfig":"8"},{"size":1106,"mtime":1611091377245,"results":"12","hashOfConfig":"8"},{"size":5194,"mtime":1611540074146,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1t9gedi",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/bian/Desktop/CS/Web/bian/client/src/index.js",[],["29","30"],"/home/bian/Desktop/CS/Web/bian/client/src/App.js",["31","32"],"import React from \"react\"\nimport axios from \"axios\" \nimport { BrowserRouter as Router, Route} from \"react-router-dom\" \nimport { HomeMainComponent, NavBar } from \"./components/index\" \n // import \"bootstrap/dist/css/bootstrap.min.css\";\n // comment\nfunction App() {\n  return (\n    <Router>\n      <Route path='/' exact component={HomeMainComponent}/> \n    </Router>\n  )\n}\n\nexport default App \n","/home/bian/Desktop/CS/Web/bian/client/src/components/index.js",[],"/home/bian/Desktop/CS/Web/bian/client/src/components/home/main.js",["33","34","35","36"],"import React from \"react\"\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\"\nimport \"../../styles/styles.css\"\nexport default class HomeMainComponent extends React.Component {\n    constructor() {\n        super();\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this); \n        \n        this.state = { \n            date: new Date(),\n            titleLimit: 40,\n            descriptionLimit: 500,\n            titleText: \"\",\n            dateText: \"\", \n            zoomLink: \"\", \n            chkbox: true,\n            description: \"\", \n            categoryCount: 0,\n            category: [],  \n            disabled: false,\n            alert: false, \n            posts: [] \n        }\n    }\n\n    componentDidMount = () => {\n        this.getPost() \n    }\n\n    getPost = () => {\n        axios.get('/api/getMessage')\n            .then((response) => {\n                const data = response.data;\n                this.setState({ posts: data});\n                console.log(\"data has been received\"); \n                console.log(JSON.stringify(this.state.posts))\n            })\n            .catch(() => {\n                alert(\"error retreving data!!\")\n            }); \n    }\n\n\n\n\n    onChangeDate(date) {\n        this.setState({\n          date: date\n        })\n      }\n\n    handleTitleLimit = (e) => {\n        this.setState({\n            titleLimit: 40 - e.target.value.length,\n            titleText: e.target.value \n         })\n    }\n    handleDescriptionLimit = (e) => {\n        this.setState({descriptionLimit: 500 - e.target.value.length, \n            description: e.target.value})\n    }\n\n    handleStartTime = (e) => {\n        this.setState({startTime: e.target.value}); \n    }\n    handleEndTime = (e) => {\n        this.setState({endTime: e.target.value}); \n    }\n\n    handleZoomLink = (e) => {\n        this.setState({zoomLink: e.target.value})\n    }\n\n    handleEst = (e) => {\n        if (e.target.value == 'on') {\n            this.setState({chkbox: false, timeZone: \"EST\"})\n        }\n        else {\n            this.setState({chkbox: true, timeZone: \"EST\" })\n        }\n    }\n    handlePst = (e) => {\n        if (e.target.value == 'on') {\n            this.setState({chkbox: true, timeZone: \"PST\"})\n        }\n        else {\n            this.setState({chkbox: false, timeZone: \"PST\"})\n        }\n    }\n    handleCategoryCount = (e) => {\n        console.log(this.state.category); \n        if (this.state.categoryCount == 3) {\n           this.setState({alert: false}) \n        }\n        if (e.target.checked) {\n            if (this.state.categoryCount > 2) {\n                e.preventDefault(); \n                this.setState({alert: true}) \n            }\n            else {\n                this.setState({categoryCount: this.state.categoryCount + 1})\n                this.setState({ category: [...this.state.category, e.target.id] }, function () {\n                    console.log(this.state.category);\n                });\n            }\n        }\n        else {\n            this.setState({categoryCount: this.state.categoryCount - 1})\n            this.setState({category: this.state.category.filter(item => item !== e.target.id)}, function() {\n                console.log(this.state.category); \n            })\n\n        }\n    }\n\n\n    \n\n    onSubmit(e) {\n        \n\n       e.preventDefault(); \n        \n        const message = { \n            title: this.state.titleText,\n            date: this.state.date,\n            startTime: this.state.startTime, \n            endTime: this.state.endTime,\n            timeZone: this.state.timeZone,\n            zoomLink: this.state.zoomLink,\n            description: this.state.description,\n            category: this.state.category\n        }\n        console.log(message); \n        //  const path = '/api/postMessage'; \n         axios.post('/api/postMessage', message)\n           .then(res => console.log(res.data)) \n           .catch(error => {\n               console.log(\"Error!\") \n           })\n        \n        this.getPost()\n        console.log(\"page update?\")\n    }\n    render() {\n        return (\n            <>\n           {/* \n            <section>\n            <h1>Promote your virtual event!</h1>\n            <form>\n            <label htmlFor=\"name\">Title</label>\n            <br></br>\n            <div>\n            <textarea id=\"first\" spellCheck=\"false\" type=\"text\" name=\"content\" defaultValue={\"\"} placeholder=\"Cybersecurity Summer Camp\" onChange={this.handleTitleLimit}/> \n            {this.state.titleLimit >= 0 ? (\n                 <label>{this.state.titleLimit}</label>\n            ) : (\n                <label>{this.state.titleLimit}</label>\n            )}\n            </div>\n\n            <br></br><br></br>\n                <label htmlFor=\"name\">Date: &nbsp;&nbsp;</label>\n                <div><DatePicker\n                selected={this.state.date}\n                onChange={this.onChangeDate}\n                />\n                </div>\n           \n            <br/><br/><label htmlFor=\"name\">Start Time & End Time (follow given format)</label>\n            <br></br><textarea id=\"fourth\" type=\"text\"  spellCheck=\"false\" name=\"content\" defaultValue={\"\"} placeholder=\"07:00 PM\" onChange={this.handleStartTime}/> \n            <textarea id=\"fifth\" type=\"text\"  spellCheck=\"false\" name=\"content\" defaultValue={\"\"} placeholder=\"10:00 PM\" onChange={this.handleEndTime}/> \n            <br></br><br></br>\n            <label >Time Zone:{'\\u00A0'}</label>\n            <input name=\"est\" id=\"est\" type=\"checkbox\" onChange={this.handleEst} autoFocus checked={! this.state.chkbox}/>\n            <label htmlFor=\"est\">EST</label>\n            <input name=\"pst\" id=\"pst\" type=\"checkbox\" onChange={this.handlePst} autoFocus checked={this.state.chkbox}/>\n            <label htmlFor=\"pst\" >PST</label>\n            \n\n            <br/><br/><label htmlFor=\"name\">Zoom link & password (leave it blank if there's no password): </label>\n          \n            <br></br><textarea id=\"second\" type=\"text\"  spellCheck=\"false\" defaultValue={\"\"} placeholder=\"https://us04web.zoom.us/j/0123456789\" onChange={this.handleZoomLink}/> \n            \n            <textarea id=\"third\" type=\"text\" spellCheck=\"false\" name=\"content\" defaultValue={\"\"} placeholder=\"passw0rd\" onChange={this.handleZoomPassword} /> \n            <br/><br/><label htmlFor=\"content\">Description (include event topic / theme & contact info): </label> \n            <br></br>\n            <div>\n                <textarea type=\"text\" spellCheck=\"false\" id=\"content\" name=\"content\" defaultValue={\"\"} onChange={this.handleDescriptionLimit} \n                placeholder=\"Summer camp for all students interested in learning the basics of cybersecurity from OS hardening, networking, cryptography, and ethical hacking!\n                Guest speaker from MIT, Harvard University, and the NSA, and a fun game of jeopardy CTF! abcdefg.com for more info, and abcdefg@gmail.com for contact.\"/>\n\n                {this.state.descriptionLimit >= 0 ? (\n                 <label>{this.state.descriptionLimit}</label>\n            ) : (\n                <label>{this.state.descriptionLimit}</label>\n            )}\n\n\n                \n            </div>\n            <br></br><br></br>\n            <input type=\"checkbox\" id=\"science\" name=\"science\" disabled={this.state.disabled} onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"science\">Science</label>\n            <input  type=\"checkbox\" disabled={this.state.disabled} id=\"technology\" name=\"technology\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"technology\">Technology</label>\n            <input  type=\"checkbox\" disabled={this.state.disabled} id=\"engineering\" name=\"engineering\" onClick={this.handleCategoryCount}autoFocus/>\n            <label htmlFor=\"engineering\">Engineering</label>\n            <input type=\"checkbox\" disabled={this.state.disabled} id=\"math\" name=\"math\" onClick={this.handleCategoryCount}autoFocus/>\n            <label htmlFor=\"math\">Math</label>\n            <input type=\"checkbox\" disabled={this.state.disabled}  id=\"humanities\" name=\"humanities\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"humanities\">Humanities</label>\n            <input type=\"checkbox\"  disabled={this.state.disabled} id=\"other\" name=\"other\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"other\">Other</label>\n           <br></br><br></br> { this.state.alert == true ? (\n              <label htmlFor=\"name\"><b>You can only select up to three categories</b></label>\n            ) : (\n                <label htmlFor=\"name\"></label>\n            )}\n            <br /><br /><button className=\"submitButton\" onClick={this.onSubmit}>Post</button>\n\n            </form>\n            \n              \n                </section> \n\n            <div className=\"hello\">\n                <p>Hello</p>\n                {this.state.posts.slice(0).reverse().map(post => {\n                    return (\n                        <>\n                        <p key={post.id}><b>{post.title}</b>: {post.description}</p>\n                        </>\n                    )\n                })}\n                <br></br>\n                \n                {this.state.posts.slice(0).reverse().map(post => {\n                   return post.category.includes(\"science\") ?\n                        <p key={post.id}>science</p>\n                    :\n                    <p>Hello</p>\n                })}\n            </div> \n              */}\n\n      <div>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>Bian</title>\n        <link rel=\"alternate icon\" href=\"/favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"styles.css\" />\n        <section className=\"dod-layout-default\">\n        <header data-grid-area=\"header\" className=\"dod-space-between-responsive\">\n          <div>\n            <h1 className=\"dod-heading-1 dod-stack-4\"><a href=\"/\">Caga</a></h1>\n            <p className=\"dod-heading-3 dod-stack-16\">A platform for higher learning</p>\n          </div>\n          <a href=\"/submit\" className=\"dod-button\">Login</a>\n        </header>\n                {/* \n                {this.state.posts.slice(0).reverse().map(post => {\n                   return post.category.includes(\"science\") ?\n                        <p key={post.id}>science</p>\n                    :\n                    <p>Hello</p>\n                })}\n                */}\n        <main data-grid-area=\"main\">\n            <div className=\"dod-media-grid dod-stack-15\" >\n            {this.state.posts.slice(0).reverse().map(post => {\n                    return (\n                        <>\n                      <div href=\"/dogs/frieda/\" className=\"dod-card\"> \n                             <p className=\"dod-heading-3 dod-stack-16\" key={post.id}>{post.title}</p>\n                         </div>\n                    </>\n                    )\n                })}\n            </div>\n        </main>\n        <main data-grid-area=\"main\" style={{marginTop: \"15px\"}}>\n        \n          <h2 className=\"dod-heading-2 dod-stack-24\">Promote your virtual event!</h2>\n          <article className=\"dod-article dod-flow\">\n            <p>_____ is a platform for high school students, for sharing and browsing online events -- \n                In this community, discover the next online lecture to attend for the weekend, find a competition \n                on a subject you are passionate about, or promote your zoom meeting you have worked hard to organize!\n            </p>\n            <form name=\"Submit a Dog\" action=\"/success\" className=\"dod-flow\" method=\"post\"><input type=\"hidden\" name=\"form-name\" defaultValue=\"Submit a Dog\" />\n              <div>\n                <label htmlFor=\"name\" className=\"dod-label  dod-stack-4\" >Event Title (40 characters max)</label>\n                \n                <input type=\"text\" maxLength={40} name=\"name\" placeholder=\"\" className=\"dod-input\" onChange={this.handleTitleLimit} required />  \n              </div>\n              <div>\n                <label htmlFor=\"url\" className=\"dod-label  dod-stack-4\">Event Date</label>\n                <div>\n                <div>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n              required \n            />\n          </div>\n          </div>\n              </div>\n              <div>\n                <label htmlFor=\"url\" className=\"dod-label  dod-stack-4\">Zoom Link</label>\n                <input type=\"text\" maxLength={128} name=\"url\" placeholder=\"https://us00web.zoom.us/s/0123456789\" onChange={this.handleZoomLink} className=\"dod-input\" required />\n              </div>\n              <div>\n              <input name=\"est\" id=\"est\" type=\"checkbox\" onChange={this.handleEst} autoFocus checked={! this.state.chkbox}/>\n            <label htmlFor=\"est\">EST</label>\n            {'\\u00A0'}{'\\u00A0'}\n            <input name=\"pst\" id=\"pst\" type=\"checkbox\" onChange={this.handlePst} autoFocus checked={this.state.chkbox}/>\n            <label htmlFor=\"pst\" >PST</label>\n            <br/><br/>\n                <label htmlFor=\"bio\" className=\"dod-label  dod-stack-4\">Event Description (500 characters max)</label>\n                <textarea maxLength={500} name=\"bio\" placeholder=\"Briefly describe the event!\" className=\"dod-input dod-stack-4\" onChange={this.handleDescriptionLimit}  defaultValue={\"\"} />\n            {this.state.descriptionLimit > 0 ? (\n                 <label>Characters left: {this.state.descriptionLimit}</label>\n            ) : (\n                <label>Characters left: {this.state.descriptionLimit} - No more characters allowed!</label>\n            )}\n              </div>\n              <label htmlFor=\"bio\" className=\"dod-label  dod-stack-4\">Event Categorization (3 max)</label>\n              <input type=\"checkbox\" id=\"science\" name=\"science\" disabled={this.state.disabled} onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"science\">Science</label>{'\\u00A0'}{'\\u00A0'}\n            <input  type=\"checkbox\" disabled={this.state.disabled} id=\"technology\" name=\"technology\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"technology\">Technology</label>{'\\u00A0'}{'\\u00A0'}\n            <input  type=\"checkbox\" disabled={this.state.disabled} id=\"engineering\" name=\"engineering\" onClick={this.handleCategoryCount}autoFocus/>\n            <label htmlFor=\"engineering\">Engineering</label>{'\\u00A0'}{'\\u00A0'}\n            <input type=\"checkbox\" disabled={this.state.disabled} id=\"math\" name=\"math\" onClick={this.handleCategoryCount}autoFocus/>\n            <label htmlFor=\"math\">Math</label>{'\\u00A0'}{'\\u00A0'}\n            <input type=\"checkbox\" disabled={this.state.disabled}  id=\"humanities\" name=\"humanities\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"humanities\">Humanities</label>{'\\u00A0'}{'\\u00A0'}\n            <input type=\"checkbox\"  disabled={this.state.disabled} id=\"other\" name=\"other\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"other\">Other</label>\n           { this.state.alert == true ? (\n              <label htmlFor=\"name\"><b><br></br>You can only select up to three categories</b></label>\n            ) : (\n                <label htmlFor=\"name\"></label>\n            )}\n            <br></br>\n              <button type=\"submit\" className=\"dod-button-secondary\" onClick={this.onSubmit}>Post!</button>\n            </form>\n          </article>\n        </main>\n        <footer data-grid-area=\"footer\">\n        </footer>\n        </section>\n      </div>\n    \n            </> \n        )\n        \n    }\n}\n\n","/home/bian/Desktop/CS/Web/bian/client/src/components/nav/nav.js",[],"/home/bian/Desktop/CS/Web/bian/client/src/serviceWorker.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":4,"column":29,"nodeType":"43","messageId":"44","endLine":4,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":77,"column":28,"nodeType":"48","messageId":"49","endLine":77,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":85,"column":28,"nodeType":"48","messageId":"49","endLine":85,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":94,"column":38,"nodeType":"48","messageId":"49","endLine":94,"endColumn":40},{"ruleId":"46","severity":1,"message":"47","line":343,"column":31,"nodeType":"48","messageId":"49","endLine":343,"endColumn":33},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]