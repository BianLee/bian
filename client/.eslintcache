[{"/Users/bian/Desktop/CS/bian/client/src/index.js":"1","/Users/bian/Desktop/CS/bian/client/src/App.js":"2","/Users/bian/Desktop/CS/bian/client/src/serviceWorker.js":"3","/Users/bian/Desktop/CS/bian/client/src/firebaseApp.js":"4","/Users/bian/Desktop/CS/bian/client/src/components/main.js":"5","/Users/bian/Desktop/CS/bian/client/src/components/index.js":"6"},{"size":297,"mtime":1614503729965,"results":"7","hashOfConfig":"8"},{"size":376,"mtime":1614512437060,"results":"9","hashOfConfig":"8"},{"size":5194,"mtime":1614503729965,"results":"10","hashOfConfig":"8"},{"size":529,"mtime":1614511160223,"results":"11","hashOfConfig":"8"},{"size":16906,"mtime":1614512247180,"results":"12","hashOfConfig":"8"},{"size":53,"mtime":1614512421309,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ee3hgq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bian/Desktop/CS/bian/client/src/index.js",[],["28","29"],"/Users/bian/Desktop/CS/bian/client/src/App.js",["30"],"/Users/bian/Desktop/CS/bian/client/src/serviceWorker.js",[],"/Users/bian/Desktop/CS/bian/client/src/firebaseApp.js",[],"/Users/bian/Desktop/CS/bian/client/src/components/main.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44","45"],"import React from \"react\"\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\"\nimport \"../styles/styles.css\"\nexport default class HomeMainComponent extends React.Component {\n    constructor() {\n        super();\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this); \n        \n        this.state = { \n            date: new Date(),\n            titleLimit: 40,\n            descriptionLimit: 500,\n            titleText: \"\",\n            dateText: \"\", \n            zoomLink: \"\", \n            chkbox: true,\n            description: \"\", \n            categoryCount: 0,\n            category: [],  \n            disabled: false,\n            alert: false, \n            posts: [],\n            showMessage: false,\n            message: \"View all events\",\n            \n            selectedDate: \"\", \n            selectedDescription: \"\", \n            selectedTitle: \"\",\n\n            permDate: \"\", \n            permDescription: \"\",\n            permTitle: \"\",\n            permID: \"\"\n        }\n    }\n\n\n    _showMessage = (bool, e) => {\n        this.setState({\n          showMessage: bool,\n        \n        });\n        if (bool) {\n            this.setState({\n                message: \"Collapse all events\" \n              \n              });\n        }\n        else {\n            this.setState({\n                message: \"View all events\" \n              \n              });\n        }\n      }\n\n\n\n    componentDidMount = () => {\n        this.getPost() \n    }\n\n    getPost = () => {\n\n\t\t// https://bianbackend.herokuapp.com/api/getMessage\n        axios.get('https://server-r8ug5ernl-bianlee.vercel.app/api/getMessage')\n            .then((response) => {\n                const data = response.data;\n                this.setState({ posts: data});\n                console.log(\"data has been received\"); \n                //console.log(JSON.stringify(this.state.posts))\n            })\n            .catch(() => {\n                alert(\"error retreving data!!\")\n            }); \n    }\n\n\n   handleSelectItem = (e) => {\n     //console.log(e.target.dataset.description)\n     //console.log(e.target.dataset.title)\n     console.log(e.target.dataset.date)\n    this.setState({\n        selectedDescription: e.target.dataset.description, \n        selectedTitle: e.target.dataset.title,\n        selectedDate: e.target.dataset.date\n    })\n   }\n\n    onChangeDate(date) {\n        this.setState({\n          date: date\n        })\n      }\n      \n    handlePerm = (e) => {\n        if (this.state.permTitle != \"\" && e.target.dataset.id == this.state.permID) {\n            this.setState({\n                permDescription: \"\", \n                permTitle: \"\",\n                permID: \"\",\n                permDate: \"\"\n            })\n        }\n        else {\n            this.setState({\n                permDescription: e.target.dataset.description, \n                permTitle: e.target.dataset.title,\n                permID: e.target.dataset.id,\n                permDate: e.target.dataset.date\n            })\n        }\n    }\n\n    \n\n    handleTitleLimit = (e) => {\n        this.setState({\n            titleLimit: 40 - e.target.value.length,\n            titleText: e.target.value \n         })\n    }\n    handleDescriptionLimit = (e) => {\n        this.setState({descriptionLimit: 500 - e.target.value.length, \n            description: e.target.value})\n    }\n\n    handleStartTime = (e) => {\n        this.setState({startTime: e.target.value}); \n    }\n    handleEndTime = (e) => {\n        this.setState({endTime: e.target.value}); \n    }\n\n    handleZoomLink = (e) => {\n        this.setState({zoomLink: e.target.value})\n    }\n\n    handleEst = (e) => {\n        if (e.target.value == 'on') {\n            this.setState({chkbox: false, timeZone: \"EST\"})\n        }\n        else {\n            this.setState({chkbox: true, timeZone: \"EST\" })\n        }\n    }\n    handlePst = (e) => {\n        if (e.target.value == 'on') {\n            this.setState({chkbox: true, timeZone: \"PST\"})\n        }\n        else {\n            this.setState({chkbox: false, timeZone: \"PST\"})\n        }\n    }\n    handleDiscardItem = (e) => {\n        this.setState({\n            selectedDescription: \"\", \n            selectedTitle: \"\",\n            selectedDate: \"\"\n        })\n    }\n    handleCategoryCount = (e) => {\n        // console.log(this.state.category); \n        if (this.state.categoryCount == 2) {\n           this.setState({alert: false}) \n        }\n        if (e.target.checked) {\n            if (this.state.categoryCount > 1) {\n                e.preventDefault(); \n                this.setState({alert: true}) \n            }\n            else {\n                this.setState({categoryCount: this.state.categoryCount + 1})\n                this.setState({ category: [...this.state.category, e.target.dataset.name] }, function () {\n                   // console.log(this.state.category);\n                });\n            }\n        }\n        else {\n            this.setState({categoryCount: this.state.categoryCount - 1})\n            this.setState({category: this.state.category.filter(item => item !== e.target.dataset.name)}, function() {\n                // console.log(this.state.category); \n            })\n\n        }\n\n\n        {/*\n        console.log(this.state.category); \n        if (this.state.categoryCount == 3) {\n           this.setState({alert: false}) \n        }\n        if (e.target.checked) {\n            if (this.state.categoryCount > 2) {\n                e.preventDefault(); \n                this.setState({alert: true}) \n            }\n            else {\n                this.setState({categoryCount: this.state.categoryCount + 1})\n                this.setState({ category: [...this.state.category, e.target.id] }, function () {\n                    console.log(this.state.category);\n                });\n            }\n        }\n        else {\n            this.setState({categoryCount: this.state.categoryCount - 1})\n            this.setState({category: this.state.category.filter(item => item !== e.target.id)}, function() {\n                console.log(this.state.category); \n            })\n\n        }\n        */}\n    }\n\n\n    \n\n    onSubmit(e) {\n        \n\n       e.preventDefault(); \n        // console.log(this.state.category)\n        const message = { \n            title: this.state.titleText,\n            date: this.state.date,\n            startTime: this.state.startTime, \n            endTime: this.state.endTime,\n            timeZone: this.state.timeZone,\n            zoomLink: this.state.zoomLink,\n            description: this.state.description,\n            category: this.state.category\n        }\n       // console.log(message); \n        //  const path = '/api/postMessage'; \n        // https://bianbackend.herokuapp.com/api/postMessage\n         axios.post('https://server-r8ug5ernl-bianlee.vercel.app/api/postMessage', message)\n           .then(res => console.log(res.data)) \n           .catch(error => {\n               console.log(\"Error!\") \n           })\n        \n        this.getPost()\n        console.log(\"page update?\")\n    }\n    render() {\n        return (\n            <>\n\n      <div>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>Bian</title>\n        <link rel=\"alternate icon\" href=\"/favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"styles.css\" />\n        <section className=\"dod-layout-default\">\n        <header data-grid-area=\"header\" className=\"dod-space-between-responsive\">\n          <div>\n            <h1 className=\"dod-heading-1 dod-stack-4\"><a href=\"/\"><i>BACC</i></a></h1>\n            <p className=\"dod-heading-3 dod-stack-16\">A platform for higher learning</p>\n          </div>\n          <a href=\"/submit\" className=\"dod-button\">Login</a>\n\n                  \n        </header>\n                {/* \n                {this.state.posts.slice(0).reverse().map(post => {\n                   return post.category.includes(\"science\") ?\n                        <p key={post.id}>science</p>\n                    :\n                    <p>Hello</p>\n                })}\n                */}\n        <main data-grid-area=\"main\">\n        {/* <h2 className=\"dod-heading-2 dod-stack-24\">Upcoming events!</h2> */}\n           \n            { this.state.showMessage ? (\n                <>\n                    <div className=\"dod-media-grid dod-stack-15\" >\n                    {this.state.posts.slice(0).reverse().map(post => {\n                            return(\n                                <>\n                             <div href=\"/dogs/frieda/\" style={{ borderStyle: this.state.permID == post._id ? 'solid': '', borderWidth: this.state.permID == post._id ? '2px': '', borderColor: this.state.permID == post._id ? 'black': ''}} key={post._id} data-date={post.date} data-id={post._id} data-description={post.description}  data-title={post.title} className=\"dod-card\" id={`${post.category}`} onMouseLeave={this.handleDiscardItem} onMouseEnter={this.handleSelectItem} onClick={this.handlePerm}>\n                                    <p className=\"dod-heading-3 dod-stack-16\" data-description={post.description} data-date={post.date} data-id={post._id} data-title={post.title}>{post.title}</p>\n                            </div>\n                            \n                            </>\n                            )\n                    })}\n                    </div>\n                </> \n            ) : (\n                <>\n                    <div className=\"dod-media-grid dod-stack-15\" >\n                    {this.state.posts.slice(0, 8).reverse().map(post => {\n                            return(\n                                <>\n                            <div href=\"/dogs/frieda/\" style={{ borderStyle: this.state.permID == post._id ? 'solid': '', borderWidth: this.state.permID == post._id ? '2px': '', borderColor: this.state.permID == post._id ? 'black': ''}} key={post._id} data-date={post.date} data-id={post._id} data-description={post.description}  data-title={post.title} className=\"dod-card\" id={`${post.category}`} onMouseLeave={this.handleDiscardItem} onMouseEnter={this.handleSelectItem} onClick={this.handlePerm}>\n                                    <p className=\"dod-heading-3 dod-stack-16\" data-description={post.description} data-date={post.date}  data-id={post._id} data-title={post.title}>{post.title}</p>\n                            </div>\n                            \n                            </>\n                            )\n                    })}\n                    </div>\n                </>\n            )}\n            <br/><a style={{cursor: \"pointer\"}} onClick={this._showMessage.bind(null, ! this.state.showMessage)}>{this.state.message}</a>\n        </main>\n\n\n        <main data-grid-area=\"main\" style={{marginTop: \"15px\", display: \"inline-block\", wordBreak: \"break-word\", height: \"200px\"}}>\n           \n           {this.state.permTitle != \"\" ? (\n               <>\n               <b><p style={{fontSize: \"2rem\", fontWeight: \"900\", lineHeight: \"40px\"}}>{this.state.permTitle}</p></b>\n               <br></br><p>{this.state.permDate}</p>\n                <br></br><p>{this.state.permDescription}</p> \n               </>\n           ) : (\n               <>\n                  <b><p style={{fontSize: \"2rem\", fontWeight: \"900\", lineHeight: \"40px\"}}>{this.state.selectedTitle}</p></b>\n                  <br></br><p>{this.state.selectedDate}</p>\n            <br></br><p>{this.state.selectedDescription}</p>\n               </> \n           )}\n                    \n          \n          \n          {/* \n                {this.state.posts.map(post => {\n                    return post.id == this.state.selectedID ?\n                        <p key={post.id}>{post.description}</p>\n                        :\n                        <p></p>\n                })}   \n                */}\n            </main>  \n\n        <main data-grid-area=\"main\" style={{marginTop: \"15px\"}}>\n        \n          <h2 className=\"dod-heading-2 dod-stack-24\">Promote your virtual event!</h2>\n          <article className=\"dod-article dod-flow\">\n            <p>_____ is a platform for high school students, for sharing and browsing online events -- \n                In this community, discover the next online lecture to attend for the weekend, find a competition \n                on a subject you are passionate about, or promote your zoom meeting you have worked hard to organize!\n            </p>\n            <form name=\"Submit a Dog\" action=\"/success\" className=\"dod-flow\" method=\"post\"><input type=\"hidden\" name=\"form-name\" defaultValue=\"Submit a Dog\" />\n              <div>\n                <label htmlFor=\"name\" className=\"dod-label dod-stack-4\" >Event Title (40 characters max)</label>\n                \n                <input type=\"text\" maxLength={40} name=\"name\" placeholder=\"\" className=\"dod-input\" onChange={this.handleTitleLimit} required />  \n              </div>\n              <div>\n                <label htmlFor=\"url\" className=\"dod-label  dod-stack-4\">Event Date</label>\n                <div>\n                <div>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n              required \n            />\n          </div>\n          </div>\n              </div>\n              <div>\n                <label htmlFor=\"url\" className=\"dod-label  dod-stack-4\">Zoom Link</label>\n                <input type=\"text\" maxLength={128} name=\"url\" placeholder=\"https://us00web.zoom.us/s/0123456789\" onChange={this.handleZoomLink} className=\"dod-input\" required />\n              </div>\n              <div>\n                <label htmlFor=\"bio\" className=\"dod-label  dod-stack-4\">Event Description (500 characters max)</label>\n                <textarea maxLength={500} name=\"bio\" placeholder=\"Briefly describe the event!\" className=\"dod-input dod-stack-4\" onChange={this.handleDescriptionLimit}  defaultValue={\"\"} />\n            {this.state.descriptionLimit > 0 ? (\n                 <label>Characters left: {this.state.descriptionLimit}</label>\n            ) : (\n                <label>Characters left: {this.state.descriptionLimit} - No more characters allowed!</label>\n            )}\n              </div>\n              <label htmlFor=\"bio\" className=\"dod-label  dod-stack-4\">Event Categorization</label>\n            <input type=\"checkbox\" disabled={this.state.disabled} id=\"mathsButton\" data-name=\"math\" onClick={this.handleCategoryCount}autoFocus/>\n            <label htmlFor=\"mathsButton\">Math</label>{'\\u00A0'}{'\\u00A0'}\n\n             <input type=\"checkbox\" id=\"physicssButton\" data-name=\"physics\" disabled={this.state.disabled} onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"physicssButton\">Physics</label>{'\\u00A0'}{'\\u00A0'}\n\n            <input type=\"checkbox\" id=\"chemistrysButton\" data-name=\"chemistry\" disabled={this.state.disabled} onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"chemistrysButton\">Chemistry</label>{'\\u00A0'}{'\\u00A0'}\n\n            <input type=\"checkbox\" id=\"biologyButton\" data-name=\"biology\" disabled={this.state.disabled} onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"biologyButton\">Biology</label>{'\\u00A0'}{'\\u00A0'}\n            <input  type=\"checkbox\" disabled={this.state.disabled} id=\"computerscienceButton\" data-name=\"computerscience\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"computerscienceButton\">Computer Science</label>{'\\u00A0'}{'\\u00A0'}\n            <input  type=\"checkbox\" disabled={this.state.disabled} id=\"engineeringButton\" data-name=\"engineering\" onClick={this.handleCategoryCount}autoFocus/>\n            <label htmlFor=\"engineeringButton\">Engineering</label>{'\\u00A0'}{'\\u00A0'}\n            <input type=\"checkbox\" disabled={this.state.disabled}  id=\"humanitiesButton\" data-name=\"humanities\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"humanitiesButton\">Humanities</label>{'\\u00A0'}{'\\u00A0'}\n            <input type=\"checkbox\" disabled={this.state.disabled}  id=\"musicsButton\" data-name=\"musics\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"musicsButton\">Music</label>{'\\u00A0'}{'\\u00A0'}\n            <input type=\"checkbox\"  disabled={this.state.disabled} id=\"otherButton\" data-name=\"other\" onClick={this.handleCategoryCount} autoFocus/>\n            <label htmlFor=\"otherButton\">Other</label>\n           { this.state.alert == true ? (\n              <label htmlFor=\"name\"><b><br></br>You can only select up to two categories</b></label>\n            ) : (\n                <label htmlFor=\"name\"></label>\n            )}\n            <br></br>\n              <button type=\"submit\" className=\"dod-button-secondary\" onClick={this.onSubmit}>Post!</button>\n            </form>\n          </article>\n        </main>\n        <footer data-grid-area=\"footer\">\n        </footer>\n        </section>\n      </div>\n    \n            </> \n        )\n        \n    }\n}\n\n","/Users/bian/Desktop/CS/bian/client/src/components/index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":99,"column":34,"nodeType":"56","messageId":"57","endLine":99,"endColumn":36},{"ruleId":"54","severity":1,"message":"58","line":99,"column":63,"nodeType":"56","messageId":"57","endLine":99,"endColumn":65},{"ruleId":"54","severity":1,"message":"58","line":142,"column":28,"nodeType":"56","messageId":"57","endLine":142,"endColumn":30},{"ruleId":"54","severity":1,"message":"58","line":150,"column":28,"nodeType":"56","messageId":"57","endLine":150,"endColumn":30},{"ruleId":"54","severity":1,"message":"58","line":166,"column":38,"nodeType":"56","messageId":"57","endLine":166,"endColumn":40},{"ruleId":"59","severity":1,"message":"60","line":190,"column":9,"nodeType":"61","messageId":"62","endLine":214,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":284,"column":96,"nodeType":"56","messageId":"57","endLine":284,"endColumn":98},{"ruleId":"54","severity":1,"message":"58","line":284,"column":154,"nodeType":"56","messageId":"57","endLine":284,"endColumn":156},{"ruleId":"54","severity":1,"message":"58","line":284,"column":210,"nodeType":"56","messageId":"57","endLine":284,"endColumn":212},{"ruleId":"54","severity":1,"message":"58","line":299,"column":95,"nodeType":"56","messageId":"57","endLine":299,"endColumn":97},{"ruleId":"54","severity":1,"message":"58","line":299,"column":153,"nodeType":"56","messageId":"57","endLine":299,"endColumn":155},{"ruleId":"54","severity":1,"message":"58","line":299,"column":209,"nodeType":"56","messageId":"57","endLine":299,"endColumn":211},{"ruleId":"63","severity":1,"message":"64","line":309,"column":18,"nodeType":"65","endLine":309,"endColumn":114},{"ruleId":"54","severity":1,"message":"55","line":315,"column":34,"nodeType":"56","messageId":"57","endLine":315,"endColumn":36},{"ruleId":"54","severity":1,"message":"58","line":402,"column":31,"nodeType":"56","messageId":"57","endLine":402,"endColumn":33},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]